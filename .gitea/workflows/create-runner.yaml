name: ðŸ˜Ž Uber Runner

on:    
  push:
    branches: [main]
    paths: 
      - versions.txt
      - dockerfiles/runner.dockerfile
      - .gitea/workflows/create-runner.yaml

  workflow_dispatch:
  
jobs:
  build-docker:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: docker.lakes.house/
      UNITY_MODULES: webgl android ios mac-mono windows-mono linux-il2cpp
      GAMECI_OS: ubuntu
      GAMECI_VERSION: 3
      
    name: Build
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Get Unity Version
        run: |
          VERSION=$(head -n 1 versions.txt)
          echo "UNITY_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Unity Version: $VERSION"

      - name: Docker Build
        run: .gitea/workflows/scripts/build-runner-image.sh
        id: build-image
        env:
          UNITY_VERSION: ${{ env.UNITY_VERSION }}
          UNITY_MODULES: ${{ env.UNITY_MODULES }}
          GAMECI_VERSION: ${{ env.GAMECI_VERSION }}
          GAMECI_OS: ${{ env.GAMECI_OS }}
          IMAGE: ${{ env.DOCKER_REGISTRY }}unityci/editor
          TAG: ${{ env.GAMECI_OS }}-${{ env.UNITY_VERSION }}-runner

      - name: Docker Push
        run: |
            echo "Pushing Docker Image  ${{ steps.build-image.outputs.FULL_IMAGE }}"
            echo "- Image: ${{ steps.build-image.outputs.IMAGE }}"
            echo "- Tag: ${{ steps.build-image.outputs.TAG }}"
            docker push ${{ steps.build-image.outputs.FULL_IMAGE }}